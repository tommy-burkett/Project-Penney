import numpy as np
from src.helpers import PATH_DATA

HALF_DECK_SIZE = 26


def get_decks(n_decks: int, 
             half_deck_size: int = HALF_DECK_SIZE, 
             seed: int = 42
            ) -> tuple[np.ndarray, np.ndarray]:
    """
        Efficiently generate `n_decks` shuffled decks using NumPy.
    
        Returns:
            decks (np.ndarray): 2D array of shape (n_decks, num_cards), 
            each row is a shuffled deck.

    """
    init_deck = [0]*half_deck_size + [1]*half_deck_size  # Base deck
    decks = np.tile(init_deck, (n_decks, 1))
    rng = np.random.default_rng(seed)
    rng.permuted(decks, axis=1, out=decks)
    
    return decks

# Write a function that stores the data generated by get_decks()
#
# Make sure you can generate some decks, and then generate some additional decks 
#   without losing track of the random seeds used
#
# Make sure you can duplicate your results, i.e. get the exact same decks twice